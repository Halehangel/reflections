When would you want to use a remote repository rather than keeping all your work local?
Whenever I'm collaborating with other people and perhaps whenever I want to store a project.
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
It let's me specify the version I want to work on currently.Describe the differences between forks, clones, and branches. When would you use one instead of another?
 Forks are kinda a way to clone repositories on github servers, whilst via clone you can copy a repository locally. Fork is completely a thing of github. And in terms branches are a completely different thing. There you start from a given point in time(a certain commit and add a new feature then merge it with another branch and so on). I'd use fork when I want to contribute to a foreign project. Clone when I would want to work on top of my project locally. Branches when I would want to add a new feature.
What is the benefit of having a copy of the last known state of the remote stored locally?
You could easily make the difference between the product code and your code, which could prevent future merge conflicts.
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
It would be an easier alternative to have the files in a simple cloud storage provided by someone. A harder solution would be using diskettes.
When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
 Well of course I would make a separate branch when working on a new feature as previously mentioned and work directly into master whenever I have to update documentation or fix bugs or something similar to that. The first prevents you from breaking already working things and actually it let's a lot of people work simultaneously. And as for the second one, well it let's you have a straight forward approach when fixing bugs.
